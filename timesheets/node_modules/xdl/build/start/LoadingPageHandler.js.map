{"version":3,"sources":["../../src/start/LoadingPageHandler.ts"],"names":["LoadingEndpoint","DeepLinkEndpoint","onDeepLink","setOnDeepLink","listener","getPlatform","query","userAgent","match","getRuntimeVersion","exp","platform","noCacheMiddleware","res","setHeader","loadingEndpointHandler","projectRoot","req","content","__dirname","toString","skipSDKVersionRequirement","appName","url","headers","runtimeVersion","replace","end","deeplinkEndpointHandler","isDevClient","projectUrl","UrlUtils","constructDevClientUrlAsync","constructManifestUrlAsync","statusCode","getLoadingPageHandler","next","pathname","exception","JSON","stringify","error"],"mappings":"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","sourcesContent":["import { ExpoConfig, getConfig, getNameFromConfig } from '@expo/config';\nimport { getRuntimeVersionNullable } from '@expo/config-plugins/build/utils/Updates';\nimport express from 'express';\nimport { readFile } from 'fs-extra';\nimport http from 'http';\nimport { resolve } from 'path';\nimport { parse } from 'url';\n\nimport { UrlUtils } from './../internal';\n\nexport const LoadingEndpoint = '/_expo/loading';\nexport const DeepLinkEndpoint = '/_expo/link';\n\ntype OnDeepLinkListener = (\n  projectRoot: string,\n  isDevClient: boolean,\n  platform: string | null\n) => Promise<void>;\n\nlet onDeepLink: OnDeepLinkListener = async () => {};\n\nexport function setOnDeepLink(listener: OnDeepLinkListener) {\n  onDeepLink = listener;\n}\n\nfunction getPlatform(\n  query: { [x: string]: string | string[] | null },\n  userAgent: string | null = null\n): 'android' | 'ios' | null {\n  if (query['platform'] === 'android' || query['platform'] === 'ios') {\n    return query['platform'];\n  }\n\n  if (userAgent?.match(/Android/i)) {\n    return 'android';\n  }\n\n  if (userAgent?.match(/iPhone|iPad/i)) {\n    return 'ios';\n  }\n\n  return null;\n}\n\nfunction getRuntimeVersion(exp: ExpoConfig, platform: 'android' | 'ios' | null) {\n  if (!platform) {\n    return 'Undetected';\n  }\n\n  return getRuntimeVersionNullable(exp, platform) ?? 'Undetected';\n}\n\nexport function noCacheMiddleware(\n  res: express.Response | http.ServerResponse\n): express.Response | http.ServerResponse {\n  res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n  res.setHeader('Expires', '-1');\n  res.setHeader('Pragma', 'no-cache');\n  return res;\n}\n\nasync function loadingEndpointHandler(\n  projectRoot: string,\n  req: express.Request | http.IncomingMessage,\n  res: express.Response | http.ServerResponse\n) {\n  res.setHeader('Content-Type', 'text/html');\n\n  let content = (\n    await readFile(resolve(__dirname, './../../static/loading-page/index.html'))\n  ).toString('utf-8');\n\n  const { exp } = getConfig(projectRoot, { skipSDKVersionRequirement: true });\n  const { appName } = getNameFromConfig(exp);\n  const { query } = parse(req.url!, true);\n  const platform = getPlatform(query, req.headers['user-agent']);\n  const runtimeVersion = getRuntimeVersion(exp, platform);\n\n  content = content.replace(/{{\\s*AppName\\s*}}/, appName ?? 'App');\n  content = content.replace(/{{\\s*RuntimeVersion\\s*}}/, runtimeVersion);\n  content = content.replace(/{{\\s*Path\\s*}}/, projectRoot);\n\n  res.end(content);\n}\n\nasync function deeplinkEndpointHandler(\n  projectRoot: string,\n  req: express.Request | http.IncomingMessage,\n  res: express.Response | http.ServerResponse\n) {\n  const { query } = parse(req.url!, true);\n  const isDevClient = query['choice'] === 'expo-dev-client';\n  const projectUrl = isDevClient\n    ? await UrlUtils.constructDevClientUrlAsync(projectRoot)\n    : await UrlUtils.constructManifestUrlAsync(projectRoot);\n\n  res.setHeader('Location', projectUrl);\n\n  onDeepLink(projectRoot, isDevClient, getPlatform(query, req.headers['user-agent']));\n\n  res.setHeader('Cache-Control', 'private, no-cache, no-store, must-revalidate');\n  res.setHeader('Expires', '-1');\n  res.setHeader('Pragma', 'no-cache');\n\n  res.statusCode = 307;\n  res.end();\n}\n\nexport function getLoadingPageHandler(projectRoot: string) {\n  return async (\n    req: express.Request | http.IncomingMessage,\n    res: express.Response | http.ServerResponse,\n    next: (err?: Error) => void\n  ) => {\n    if (!req.url) {\n      next();\n      return;\n    }\n\n    try {\n      const url = parse(req.url).pathname || req.url;\n      switch (url) {\n        case LoadingEndpoint:\n          await loadingEndpointHandler(projectRoot, req, noCacheMiddleware(res));\n          break;\n        case DeepLinkEndpoint:\n          await deeplinkEndpointHandler(projectRoot, req, noCacheMiddleware(res));\n          break;\n        default:\n          next();\n      }\n    } catch (exception) {\n      res.statusCode = 520;\n      if (typeof exception == 'object' && exception != null) {\n        res.end(\n          JSON.stringify({\n            error: exception.toString(),\n          })\n        );\n      } else {\n        res.end(`Unexpected error: ${exception}`);\n      }\n    }\n  };\n}\n"],"file":"LoadingPageHandler.js"}